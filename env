#!/bin/bash

source ./src/poky/oe-init-build-env
cd ..

# bitbake-layers
alias \
    add-layer='bitbake-layers add-layer' \
    create-layer='bitbake-layers create-layer' \
    fetch-layer='bitbake-layers layerindex-fetch' \
    remove-layer='bitbake-layers remove-layer' \
    show-layers='bitbake-layers show-layers' \
    show-recipes='bitbake-layers show-recipes' \

alias \
    rq='runqemu slirp qemux86-64 nographic' \
    rqg='runqemu slirp qemux86-64' \

bbe() {
    [ $# -eq 1 ] || return 1;

    bitbake -e "$1" | tee build/"$1".env
    echo build/"$1".env
}

getvar() {
    case "$#" in
        1) 
            bitbake-getvar "$1" | sed -nE "s/$1=\"(.*)\"/\1/p"
            ;;
        2)
            bitbake-getvar -r "$2" "$1" | sed -nE "s/$1=\"(.*)\"/\1/p"
            ;;
        *) 
            echo "wrong \$#" 
            ;;
    esac
}

gets() {
    [ $# -eq 1 ] || return 1;
    getvar S "$1"
}

getb() {
    [ $# -eq 1 ] || return 1;
    getvar B "$1"
}

getworkdir() {
    [ $# -eq 1 ] || return 1;
    getvar WORKDIR "$1"
}

cdb() {
    [ $# -eq 1 ] || return 1;
    B=$(getb "$1")
    [ -d "$B" ] && cd "$B" || return 1;
}

cds() {
    [ $# -eq 1 ] || return 1;
    S=$(gets "$1")
    [ -d "$S" ] && cd "$S" || return 1;
}

cdworkdir() {
    [ $# -eq 1 ] || return 1;
    WORKDIR=$(getworkdir "$1")
    [ -d "$WORKDIR" ] && cd "$WORKDIR" || return 1;
}

unalias up 2> /dev/null || true
PROJECT_ROOT=$(dirname "$0" | xargs realpath)
up() {
    cd "$PROJECT_ROOT" || return 1
}
